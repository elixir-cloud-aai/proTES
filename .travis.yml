os:
- linux
dist: bionic
language: python
services:
- docker
install:
# omit automatic installation of dependencies in virtualenv
- pip --version
stages:
- name: test
- name: publish
  # do not execute if PR branch
  if: type != pull_request
- name: deploy
  if: type != pull_request
branches:
  only:
  - dev
  - continuous_deployment
jobs:
  include:
  - stage: test
    name: Build, deploy and test application
    script:
    # create ../data
    - "mkdir -p ../data/pro_tes/{specs,db}"
    # build and deploy application
    - "docker-compose -f docker-compose.yaml -f docker-compose.dev.yaml up --build -d"
    # wait for protes to be up
    - sleep 30
    # check the docker compose logs
    - "docker-compose logs"
    # test if endpoint 'GET /tasks' is accessible
    - "test $(curl -sL -w '%{http_code}' -X GET --header 'Accept: application/json' 'http://localhost:7878/ga4gh/tes/v1/tasks?view=MINIMAL' -o /dev/null)=='200'"
  - stage: publish
    name: Push image to registry
    script:
    # build and tag app image
    - docker build -t "$DOCKER_REPO_NAME":"$DOCKER_REPO_TAG" .
    # log in
    - echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
    # push image
    - docker push "$DOCKER_REPO_NAME":"$DOCKER_REPO_TAG"
    # delete token
    - rm ${HOME}/.docker/config.json
    # push image
    - docker push "$DOCKER_REPO_NAME":"$DOCKER_REPO_TAG"
  - stage: deploy
    name: Deploy production app
    script:
    # install kubectl
    - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.16.3/bin/linux/amd64/kubectl
    - chmod +x kubectl
    - sudo mv kubectl /usr/local/bin/
    # install helm
    - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    # log in
    - kubectl config set-credentials protes-ci-user --token=$K8S_TOKEN
    - kubectl config set-cluster ci-server --server=$K8S_CLUSTER
    - kubectl config set-context ci-context --user=protes-ci-user --namespace=$K8S_NAMESPACE --cluster=ci-server
    - kubectl config use-context ci-context
    # deploy
    # TODO: override env variables with, e.g., --set protes.appName=proxyT
    # get keys from deployment/values.yaml which contains the defaults
    - helm install deployment --generate-name 
